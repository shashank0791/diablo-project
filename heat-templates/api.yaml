heat_template_version: 2015-04-30
description: API resource.

parameters:
  availability_zone:
    type: string
    description: The Availability Zone to launch the instance.
  volume_size:
    type: number
    description: Size of the volume to be created.
    default: 1
    constraints:
      - range: { min: 1 }
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    constraints:
      - custom_constraint: glance.image
  key:
    type: string
    description: Key pair to be created
    label: Key pair
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    constraints:
      - custom_constraint: nova.flavor
  mysql_server:
    type: string
    label: MySQL database server
    description: IP address of the MySQL database server.
  network_id:
    type: string
    label: Network ID/Name
    description: Network to be used for compute instance.
  pool_id:
    type: string
    description: Pool to contact
  subnet_id:
    type: string
    description: Subnet ID for pool.
resources:
  name_nonce:
    type: OS::Heat::RandomString
    properties:
            length: 7
            sequence: lowercase
  security_group:
      type: OS::Neutron::SecurityGroup
      properties:
        name: api_server_security_group
        rules:
          - protocol: tcp
            port_range_min: 80
            port_range_max: 80
          - protocol: tcp
            port_range_min: 22
            port_range_max: 22
          - protocol: tcp
            port_range_min: 443
            port_range_max: 443
  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network_id }
      security_groups:
        - { get_resource: security_group }
  nova_server:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: api-$NONCE
          params:
            $NONCE: { get_resource: name_nonce}
      availability_zone: { get_param: availability_zone }
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key }
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __mysql_ip__: { get_param: mysql_server }
          template: |
            #!/bin/bash
            sudo apt-get update
            sudo apt-get upgrade
            sudo debconf-set-selections <<< "mysql-server mysql-server/root_password password 'root'"
            sudo debconf-set-selections <<< "mysql-server mysql-server/root_password_again password 'root'"
            export DEBIAN_FRONTEND="noninteractive"
            sudo apt-get install -y mysql-server
            sudo service mysql restart
            sudo mysqladmin -u root password "mysql_root_pwd"
            sudo service mysql restart
            sudo apt-get install -y git
            sudo git clone https://github.com/shashank0791/diablo-project.git /opt/diablo-project
            sudo apt-get install -y apache2
            sudo apt-get install -y libapache2-mod-wsgi
            sudo apt-get install -y python2.7 python-pip
            sudo pip install pecan
            cd /opt/diablo-project/wfh/
            sudo python /opt/diablo-project/wfh/setup.py install
            sudo service apache2 restart
            sudo cp /opt/diablo-project/wfh/sample/apache2/sites-available/wfh.conf /etc/apache2/sites-available/
            sudo a2dissite 000-default
            sudo service apache2 restart
            sudo a2ensite wfh
            sudo service apache2 restart
            echo '__mysql_ip__' > /opt/mysqlip
  member:
    type: OS::Neutron::LBaaS::PoolMember
    properties:
      pool: { get_param: pool_id }
      address: { get_attr: [ nova_server, first_address ]}
      protocol_port: 80
      subnet: { get_param: subnet_id }
outputs:
  ip:
    description: API IP
    value: { get_attr: [nova_server, first_address] }
